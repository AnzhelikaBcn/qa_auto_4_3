{
	"info": {
		"_postman_id": "5b41eddd-b2de-4914-ad68-b550dc20e80f",
		"name": "verifier_tasks",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "28422607",
		"_collection_link": "https://gold-spaceship-869196.postman.co/workspace/f64cc788-2c41-4238-81c9-8dd4d63076ad/collection/28422607-5b41eddd-b2de-4914-ad68-b550dc20e80f?action=share&source=collection_link&creator=28422607"
	},
	"item": [
		{
			"name": "create_task_admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статуса ответа",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"try {",
							"    // Попытка парсинга JSON и вывод в консоль",
							"    const response = pm.response.json();",
							"    console.log(\"Response Body:\", response);",
							"",
							"    // Ваш дополнительный код для проверок",
							"    pm.test(\"Your Additional Test\", () => {",
							"        // Ваш код проверки тела ответа",
							"    });",
							"} catch (error) {",
							"    console.error(\"Error parsing JSON:\", error);",
							"    pm.test(\"JSON Parsing Error\", () => {",
							"        pm.expect.fail(\"Failed to parse JSON\");",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenA}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": null,\n    \"text\": \"API\",\n    \"answer\": \"postman\",\n    \"title\": \"intagration testing\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/tasks",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"tasks"
					],
					"query": [
						{
							"key": "isSolved",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_task_admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статуса ответа",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"try {",
							"    // Попытка парсинга JSON и вывод в консоль",
							"    const response = pm.response.json();",
							"    console.log(\"Response Body:\", response);",
							"",
							"    // Ваш дополнительный код для проверок",
							"    pm.test(\"Your Additional Test\", () => {",
							"        // Ваш код проверки тела ответа",
							"    });",
							"} catch (error) {",
							"    console.error(\"Error parsing JSON:\", error);",
							"    pm.test(\"JSON Parsing Error\", () => {",
							"        pm.expect.fail(\"Failed to parse JSON\");",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenA}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/tasks?page=0&size=100",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"tasks"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "id",
							"value": "35163",
							"disabled": true
						},
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_id_task_admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статуса ответа",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"try {",
							"    // Попытка парсинга JSON и вывод в консоль",
							"    const response = pm.response.json();",
							"    console.log(\"Response Body:\", response);",
							"",
							"    // Ваш дополнительный код для проверок",
							"    pm.test(\"Your Additional Test\", () => {",
							"        // Ваш код проверки тела ответа",
							"    });",
							"} catch (error) {",
							"    console.error(\"Error parsing JSON:\", error);",
							"    pm.test(\"JSON Parsing Error\", () => {",
							"        pm.expect.fail(\"Failed to parse JSON\");",
							"    });",
							"}",
							"        "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenA}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/tasks/1601",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"tasks",
						"1601"
					],
					"query": [
						{
							"key": "size",
							"value": "20",
							"disabled": true
						},
						{
							"key": "isSolved",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete_task_admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка статуса ответа",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenA}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/api/user-tasks/1602"
			},
			"response": []
		}
	]
}
